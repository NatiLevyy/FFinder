rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions for authentication
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Users public profiles - readable by authenticated users, writable by owner only
    match /users_public/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
    }
    
    // Location sharing - write only by owner, read only if sharing is enabled and user is authenticated
    match /locations/{userId} {
      allow write: if isOwner(userId);
      allow read: if isAuthenticated() && 
                     resource != null && 
                     resource.data.sharing == true;
    }
    
    // Legacy users collection (keep existing functionality)
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
      
      // Friends subcollection
      match /friends/{friendId} {
        allow read, write: if isOwner(userId);
      }
    }
    
    // Friend requests - readable/writable by sender and recipient
    match /friendRequests/{requestId} {
      allow read, write: if isAuthenticated() && 
                            (resource.data.fromUserId == request.auth.uid || 
                             resource.data.toUserId == request.auth.uid);
      allow create: if isAuthenticated() && 
                       request.resource.data.fromUserId == request.auth.uid;
    }
    
    // Location updates - readable if user is in visibleTo array
    match /locationUpdates/{updateId} {
      allow read: if isAuthenticated() && 
                     resource != null && 
                     request.auth.uid in resource.data.visibleTo;
      allow write: if isAuthenticated() && 
                      request.auth.uid in request.resource.data.visibleTo;
    }
    
    // Activities - readable if user is in visibleTo array
    match /activities/{activityId} {
      allow read: if isAuthenticated() && 
                     resource != null && 
                     request.auth.uid in resource.data.visibleTo;
      allow write: if isAuthenticated() && 
                      request.auth.uid in request.resource.data.visibleTo;
    }
    
    // Legacy collections for backward compatibility
    match /friends/{friendshipId} {
      allow read: if isAuthenticated() && 
        (friendshipId.matches('.*_' + request.auth.uid) || 
         friendshipId.matches(request.auth.uid + '_.*'));
      allow write: if isAuthenticated() && 
        (request.auth.uid == request.resource.data.userId || 
         request.auth.uid == request.resource.data.friendId);
    }
    
    match /contactHashes/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    match /userDiscovery/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // Block all other access by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}